{"version":3,"sources":["Components/arrayForm.js","AppPages/campaignForm.js"],"names":["ArrayForm","data","setData","name","useState","element","setElement","remove","setRemove","addData","a","length","removeData","newData","splice","style","textAlign","display","justifyContent","gap","flexWrap","map","label","onChange","event","target","value","id","onClick","variant","color","index","validate","values","errors","priceUSD","isNaN","CampaignForm","countries","setCountries","apps","setApps","history","useHistory","formik","useFormik","initialValues","status","onSubmit","targeting","console","log","axios","post","push","marginTop","flexDirection","alignItems","handleSubmit","htmlFor","type","handleChange","width"],"mappings":"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","file":"static/js/5.b4940266.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\n// this component takes an array state and his setter\r\n// and provides a ui to handle changing him\r\nfunction ArrayForm({ data, setData, name }) {\r\n  const [element, setElement] = useState(\"\");\r\n  const [remove, setRemove] = useState(\"\");\r\n\r\n  const addData = async () => {\r\n    if (element.length > 0) {\r\n      setData([...data, element]);\r\n      setElement(\"\");\r\n    }\r\n  };\r\n\r\n  const removeData = async () => {\r\n    if (remove) {\r\n      const newData = [...data];\r\n      newData.splice(remove, 1);\r\n      setData(newData);\r\n      setRemove(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>{name}:</h3>\r\n      <br />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          gap: 10,\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {data.length > 0\r\n          ? data.map((element) => {\r\n              return <Chip key={element} label={element} />;\r\n            })\r\n          : null}\r\n      </div>\r\n      <br />\r\n      <div style={{ textAlign: \"center\" }}>Enter a {name} to Add:</div>\r\n      <br />\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", gap: 10 }}>\r\n        <TextField\r\n          onChange={(event) => setElement(event.target.value)}\r\n          value={element}\r\n          id=\"keyword-basic\"\r\n          label=\"KeyWord\"\r\n        />\r\n        <Button onClick={() => addData()} variant=\"contained\" color=\"primary\">\r\n          Add\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <div style={{ textAlign: \"center\" }}>Choose a {name} to Delete:</div>\r\n      <br />\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", gap: 10 }}>\r\n        <select\r\n          onChange={(event) => setRemove(event.target.value)}\r\n          name=\"keywords\"\r\n          id=\"keywords\"\r\n        >\r\n          <option value=\"\">select...</option>\r\n          {data.length > 0\r\n            ? data.map((element, index) => {\r\n                return (\r\n                  <option key={element} value={index}>\r\n                    {element}\r\n                  </option>\r\n                );\r\n              })\r\n            : null}\r\n        </select>\r\n        <Button\r\n          onClick={() => removeData()}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArrayForm;\r\n","import React, { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport ArrayForm from \"../Components/arrayForm\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// validation conditions\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.name) {\r\n    errors.name = \"Required\";\r\n  }\r\n\r\n  if (!values.priceUSD) {\r\n    errors.priceUSD = \"Required\";\r\n  } else if (isNaN(values.priceUSD)) {\r\n    errors.priceUSD = \"Must be a number\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nfunction CampaignForm() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [apps, setApps] = useState([]);\r\n  const history = useHistory();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      priceUSD: \"\",\r\n      status: \"active\",\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      const data = { ...values, targeting: { countries, apps } };\r\n      console.log(data);\r\n      await axios.post(\"./api/campaign\", { data });\r\n      history.push(\"/\");\r\n    },\r\n  });\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: \"6%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h1>Add Campaign</h1>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">Campaign Name</label>\r\n          <br />\r\n          <input\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.name}\r\n          />\r\n          <br />\r\n          {formik.errors.name ? (\r\n            <div style={{ color: \"red\" }}>{formik.errors.name}</div>\r\n          ) : null}\r\n          <br />\r\n          <label htmlFor=\"priceUSD\">Price USD</label>\r\n          <br />\r\n          <input\r\n            id=\"priceUSD\"\r\n            name=\"priceUSD\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.priceUSD}\r\n          />\r\n          <br />\r\n          {formik.errors.priceUSD ? (\r\n            <div style={{ color: \"red\" }}>{formik.errors.priceUSD}</div>\r\n          ) : null}\r\n          <br />\r\n          <label htmlFor=\"status\">Status</label>\r\n          <br />\r\n          <select\r\n            id=\"status\"\r\n            name=\"status\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.status}\r\n          >\r\n            <option value=\"active\">active</option>\r\n            <option value=\"inactive\">inactive</option>\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <ArrayForm data={countries} setData={setCountries} name={\"countries\"} />\r\n        <ArrayForm data={apps} setData={setApps} name={\"apps\"} />\r\n        <br />\r\n        <br />\r\n        <button style={{ width: \"80%\" }} type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CampaignForm;\r\n"],"sourceRoot":""}